from typing import Iterable, Union

import numpy as np
import numpy.typing as npt

Numerical1D = Union[
    npt.NDArray[np.float_],
    npt.NDArray[np.int_],
    Iterable[float],
    Iterable[int],
]

Integer1D = Union[
    npt.NDArray[np.float_],
    npt.NDArray[np.int_],
    Iterable[float],
    Iterable[int],
]

Integer2D = Union[
    npt.NDArray[np.float_],
    npt.NDArray[np.int_],
    Iterable[float],
    Iterable[int],
]

Float1D = Union[npt.NDArray[np.float32], Iterable[float]]

Numerical = Union[
    float, int
]

NoneInt = Union[int, None]

class DisplayCoordinate:
    def __init__(self) -> None: ...

    def get_seed(self) -> int: ...
    def get_octaves(self) -> int: ...
    def get_lacunarity(self) -> Numerical: ...
    def get_gain(self) -> Numerical: ...
    def get_display_coordinate_set(self) -> bool: ...

    def configure(self, seed: NoneInt=None, octaves: int=2, lacunarity: float=0.75, gain: float=1.0) -> None: ...

    def generate_random_display_coordinate(self) -> None: ...
    def generate_display_coordinate_from_perlin_noise(self, in_value: Numerical) -> None: ...
    def generate_display_coordinate_from_fractal_brownian_motion(self, in_value: Numerical) -> None: ...

    def set_display_coordinate(self, in_color: Integer1D) -> None: ...
    def get_display_coordinate(self, detect_format: bool=True) -> Float1D: ...

class RadialPolygon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_point_count(self, point_count: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class Rectangle:
    def __init__(self) -> None: ...

    def render(self) -> None: ...

    def set_centre(self, position: Integer1D) -> None: ...
    def set_color(self, color: Numerical1D) -> None: ...
    def set_size(self, size: Integer1D) -> None: ...
    def set_corner_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class Pixel:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...

class Line:
    def __init__(self) -> None: ...

    def render(self) -> None: ...

    def set_start(self, start_position: Integer1D) -> None: ...
    def set_end(self, end_position: Integer1D) -> None: ...
    def set_color(self, color: Numerical1D) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class PolygonShape:
    def __init__(self) -> None: ...

    def render(self) -> None: ...

    def set_points(self, points: Integer2D) -> None: ...
    def set_color(self, color: Numerical1D) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...
    def set_closed(self, closed: bool) -> None: ...

class Arc:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: Numerical) -> None: ...
    def set_point_count(self, point_count: int) -> None: ...
    def set_width(self, width: Numerical) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...
    def set_start_angle(self, start_angle: Numerical) -> None: ...
    def set_end_angle(self, end_angle: Numerical) -> None: ...

class Ellipse:
    def __init__(self) -> None: ...

    def render(self) -> None: ...

    def set_centre(self, position: Integer1D) -> None: ...
    def set_size(self, size: Integer1D) -> None: ...
    def set_color(self, color: Numerical1D) -> None: ...
    def set_point_count(self, point_count: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

# Complex shapes

class Circle:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...

class EquilateralTriangle:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularSquare:
    def __init__(self) -> None: ...

    def render(self) -> None: ...

    def set_centre(self, position: Integer1D) -> None: ...
    def set_color(self, color: Numerical1D) -> None: ...
    def set_size(self, size: Numerical) -> None: ...
    def set_corner_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularPentagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularHexagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularHeptagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularOctagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularNonagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...

class RegularDecagon:
    def __init__(self) -> None: ...

    shape_center: DisplayCoordinate

    def render(self) -> None: ...

    def set_color(self, color: Numerical1D) -> None: ...
    def set_radius(self, radius: int) -> None: ...
    def set_width(self, width: int) -> None: ...
    def set_rotation(self, rotation: Numerical) -> None: ...