Notes
-----
Add typehint for returned classes at least where unclear (for intellicode) - eg:

...
    def get_controller(self, controller_index) -> 'Controller':
        return _Registry.pmma_module_spine[Constants.CONTROLLER_INTERMEDIARY_OBJECT].get_controller(controller_index)
...

When adjusting the number of segments in circular shapes, or shapes with varying numbers of points, make sure to also update color data too!

2 fps particles demo w/ circs instead of pix - temporary benchmark DO NOT COMMIT

Module Initialization Order
---------------------------

Built in (standard library)

External (pip)

Internal TopLevel (pmma.__init__ / pmma.c_setup / pmma.setup)

Internal (pmma.py_src./)

Internal Utility (pmma.py_src.utility./)

*ONLY import required modules.

Search
======
Search for public attributes of a class: self.([A-Z]|[a-z])+

Issues
======
Transparent display not working with opengl, potentially signs of a bigger problem.
Display wont do full screen properly. (Try display recreation from the top instead)
Rendering Polygon fails.
Rendering shapes need to be updated when window resized. Note though that this breaks pretty much all positioning and shapes so IDK what to do about that at the moment lol.

TO DO LIST
==========
Work on MIDI events when able to do so. Update: Not possible with Pygame, will need to do more RnD first.

Create aggregated events like Pointer (similar to controller already added).

Introduce prefix adjustments for SI-units. **
Add object collision.
Work on render pipeline.

**ALSO, ADJUST SHAPE INDEXES**

TEMPORARY TO DO LIST
====================
Create shapes like circle from RadialPolygon
Create shapes like lines from Polygon (with closed=False)
Update shapes when aspect ratio changes
Update render pipeline

IMPROVEMENTS
============
None :)