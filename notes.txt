Notes
-----
Add typehint for returned classes at least where unclear (for intellicode) - eg:

...
    def get_controller(self, controller_index) -> 'Controller':
        return Registry.pmma_module_spine[Constants.CONTROLLER_INTERMEDIARY_OBJECT].get_controller(controller_index)
...

When adjusting the number of segments in circular shapes, or shapes with varying numbers of points, make sure to also update color data too!

Module Initialization Order
---------------------------

Built in (standard library)

External (pip)

Internal Core (registry, error_utils, constants)

Internal (pmma.py_src./)

Internal Utility (pmma.py_src.utility./)

*ONLY import required modules.

Search
======
Search for public attributes of a class: self.([A-Z]|[a-z])+

Issues
======
Transparent display not working with opengl, potentially signs of a bigger problem.

TO DO LIST
==========
Add in Coordinate intermediaries for render pipeline
Work on MIDI events when able to do so.

Integrate events with custom event manager
Create aggregated events like Pointer (similar to controller already added).

Introduce prefix adjustments for SI-units. **
Introduce Coordinate and Degree conversions. **
Add object collision.
Work on render pipeline.

**MANGLED RENDER PIPELINE CIRCLES, FIX BY ADDING SEGMENTS PROPERTY TO SHAPE AND CHECKING THAT AS WELL AS VERTEX/COLOR CHANGED, AND MAKE SHAPE QUALITY A CUSTOM. ATTRIBUTE [CENTRALIZE CHANGES AS BOTH LINKED]**
**ALSO, ADJUST SHAPE INDEXES**
**FOR POINTS, X: 1/DISPLAY X SIZE, Y: 1/DISPLAY Y SIZE?**